agents:
  queue: "public"

steps:
  - name: "Tests"
    label: "Tests"
    command: "go test -race -v ./..."
    env:
      DOCKER_BUILDKIT: 1
    plugins:
      - docker-compose#v3.9.0:
          run: ci

  - name: "go vet"
    label: "Tests"
    command: "go vet ./..."
    env:
      DOCKER_BUILDKIT: 1
    plugins:
      - docker-compose#v3.9.0:
          run: ci

  - name: "staticcheck"
    label: "Tests"
    command: "go install honnef.co/go/tools/cmd/staticcheck@latest && $(go env GOPATH)/bin/staticcheck ./..."
    env:
      DOCKER_BUILDKIT: 1
    plugins:
      - docker-compose#v3.9.0:
          run: ci

  - name: "Verify dependency licenses %n"
    command: "go get -v ./... && license_finder"
    env:
      DOCKER_BUILDKIT: 1
    plugins:
      - docker-compose#v3.9.0:
          run: ci
  - name: "Goreleaser build check"
    commands:
      - go install github.com/goreleaser/goreleaser@latest
      - export GORELEASER_CURRENT_TAG=$(buildkite-agent meta-data get "release-version")
      - goreleaser build --rm-dist  --skip-validate
    plugins:
      - docker#v3.8.0:
          image: pscale.dev/wolfi-prod/go:1.21.5
          propagate-environment: true
          always-pull: true
          entrypoint: ""
          shell: [ "/bin/sh", "-e", "-c" ]
          environment:
            - "GITHUB_TOKEN"
            - "DOCKER_USERNAME"
            - "DOCKER_PASSWORD"
          volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
  - wait

  - block: ":rocket: Release !"
    branches: "main"

  - command: script/bump-version.sh
    if: build.branch == "main"
    label: ":arrow_up_small: Bump & tag version"

  - wait

  - label: ":github: Publishing artifacts"
    if: build.branch == "main"
    commands:
      - go install github.com/goreleaser/goreleaser@latest
      - export GORELEASER_CURRENT_TAG=$(buildkite-agent meta-data get "release-version")
      - goreleaser release --rm-dist
    plugins:
      - docker#v3.8.0:
          image: pscale.dev/wolfi-prod/go:1.21.5
          propagate-environment: true
          always-pull: true
          entrypoint: ""
          shell: ["/bin/sh", "-e", "-c"]
          environment:
            - "GITHUB_TOKEN"
            - "DOCKER_USERNAME"
            - "DOCKER_PASSWORD"
          volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
